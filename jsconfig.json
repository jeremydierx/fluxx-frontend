{
  "compilerOptions": {
    "moduleResolution": "bundler",
    "target": "ESNext",
    "module": "ESNext",
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
     * To have warnings / errors of the Svelte compiler at the
     * correct position, enable source maps by default.
     */
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable this if you'd like to use dynamic types.
     */
    "checkJs": false,
    "types": ["svelte"]
  },
  /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   */
  "include": ["src/**/*.js", "src/**/*.svelte", "node_modules/@sveltejs/kit/types/**/*.d.ts"],
  "exclude": ["node_modules"],
  "typeAcquisition": {
    "exclude": ["babel__core", "babel__generator", "babel__template", "babel__traverse", "eslint", "estree", "graceful-fs", "istanbul-lib-coverage", "istanbul-lib-report", "istanbul-reports", "json-schema", "linkify-it", "markdown-it", "mdurl", "node", "stack-utils", "yargs", "yargs-parser"]
  }
}
